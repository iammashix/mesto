{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/publicPath","webpack://mesto-project-ff/./src/cards.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.p = \"\";","import bebetka1 from './images/bebetka_1.jpeg';\nimport bebetka2 from './images/bebetka_2.jpeg';\nimport bebetka3 from './images/bebetka_3.jpeg';\nimport bebetka4 from './images/bebetka_4.jpeg';\nimport bebetka5 from './images/bebetka_5.jpeg';\nimport bebetka6 from './images/bebetka_6.jpeg';\n\nconst initialCards = [\n    {\n        name: 'Бебетка',\n        link: bebetka1\n    },\n    {\n        name: 'Бебестер',\n        link: bebetka4\n    },\n    {\n        name: 'Крейзи Беба',\n        link: bebetka2\n    },\n    {\n        name: 'Беба',\n        link: bebetka5\n    },\n    {\n        name: 'Сонный Бебстер',\n        link: bebetka3\n    },\n    {\n        name: 'Бусита',\n        link: bebetka6\n    }\n];\n\nexport default initialCards;","// создание карточки\nexport function createCard(cardTemplate, cardData, deleteCallback, likeCallback, openImageCallback) {\n    const cardElement = cardTemplate.cloneNode(true).querySelector('.card');\n    const cardImage = cardElement.querySelector('.card__image');\n    const likeButton = cardElement.querySelector('.card__like-button');\n\n    cardElement.querySelector('.card__title').textContent = cardData.name;\n    cardImage.src = cardData.link;\n    cardImage.alt = cardData.name;\n\n    cardImage.addEventListener('click', () => openImageCallback(cardData.link, cardData.name));\n    cardElement.querySelector('.card__delete-button').addEventListener('click', deleteCallback);\n    likeButton.addEventListener('click', likeCallback);\n\n    return cardElement;\n}\n\n// удаление карточки\nexport function deleteCard(event) {\n    const card = event.target.closest('.card');\n    card.remove();\n}\n\n// лайк карточки\nexport function likeCard(event) {\n    const likeButton = event.target;\n    likeButton.classList.toggle('card__like-button_is-active');\n    console.log(`Like button clicked: ${likeButton.classList}`);\n}\n","// открытие попапа\nexport function openPopup(popup) {\n    popup.classList.add('popup_is-opened');\n    document.body.style.overflow = 'hidden'; \n    document.addEventListener('keydown', handleEscClose); \n}\n\n// закрытие попапа\nexport function closePopup(popup) {\n    popup.classList.remove('popup_is-opened');\n    document.body.style.overflow = ''; \n    document.removeEventListener('keydown', handleEscClose); \n}\n\n// Esc\nfunction handleEscClose(event) {\n    if (event.key === 'Escape') {\n        const openedPopup = document.querySelector('.popup.popup_is-opened');\n        if (openedPopup) {\n            closePopup(openedPopup);\n        }\n    }\n}\n\n// Закрытие при клике на оверлей\nfunction handleOverlayClick(event) {\n    if (event.target.classList.contains('popup')) {\n        closePopup(event.target);\n    }\n}\n\nexport function addOverlayCloseHandler(popup) {\n    popup.addEventListener('click', handleOverlayClick);\n}\n","//index.js//\nimport './pages/index.css';\nimport initialCards from './cards.js';\nimport avatar from './images/avatar.jpeg';\nimport { createCard, deleteCard, likeCard } from './components/card.js';\nimport { openPopup, closePopup, addOverlayCloseHandler } from './components/modal.js';\n\nconst cardTemplate = document.querySelector('#card-template').content;\nconst cardList = document.querySelector('.places__list');\n\n// Константы DOM\nconst editProfilePopup = document.querySelector('.popup_type_edit');\nconst newCardPopup = document.querySelector('.popup_type_new-card');\nconst imagePopup = document.querySelector('.popup_type_image');\nconst imagePopupImage = imagePopup.querySelector('.popup__image');\nconst imagePopupCaption = imagePopup.querySelector('.popup__caption');\nconst editProfileButton = document.querySelector('.profile__edit-button');\nconst addCardButton = document.querySelector('.profile__add-button');\nconst closeButtons = document.querySelectorAll('.popup__close');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\n\n// Фото профиля\ndocument.querySelector('.profile__image').style.backgroundImage = `url(${avatar})`;\n\n// Открытие попапа с изображением\nexport function openImagePopup(imageSrc, imageAlt) {\n    imagePopupImage.src = imageSrc;\n    imagePopupImage.alt = imageAlt;\n    imagePopupCaption.textContent = imageAlt;\n    openPopup(imagePopup);\n}\n\n// Вывод карточек\nfunction showCards(cards) {\n    cards.forEach((cardData) => {\n        const cardElement = createCard(cardTemplate, cardData, deleteCard, likeCard, openImagePopup);\n        cardList.append(cardElement);\n    });\n}\n\nshowCards(initialCards);\n\n// Форма DOM\nconst editProfileForm = document.querySelector('.popup__form[name=\"edit-profile-form\"]');\nconst nameInput = editProfileForm.querySelector('.popup__input[name=\"name\"]');\nconst jobInput = editProfileForm.querySelector('.popup__input[name=\"description\"]');\nconst submitButton = editProfileForm.querySelector('.popup__button');\n\n// Регулярные выражения для валидации\nconst nameRegex = /^[A-Za-zА-Яа-яЁё\\s-]{2,40}$/;\nconst descriptionRegex = /^[A-Za-zА-Яа-яЁё\\s-]{2,200}$/;\n\n// Сообщения об ошибках\nconst nameErrorMessages = {\n    valueMissing: 'Это поле обязательно для заполнения.',\n    patternMismatch: 'Используйте только латинские и кириллические буквы, знаки дефиса и пробелы.',\n    tooShort: 'Имя должно содержать не менее 2 символов.',\n    tooLong: 'Имя должно содержать не более 40 символов.'\n};\nconst descriptionErrorMessages = {\n    valueMissing: 'Это поле обязательно для заполнения.',\n    patternMismatch: 'Используйте только латинские и кириллические буквы, знаки дефиса и пробелы.',\n    tooShort: 'Описание должно содержать не менее 2 символов.',\n    tooLong: 'Описание должно содержать не более 200 символов.'\n};\n\n// Функция для отображения ошибок\nfunction showInputError(inputElement, errorMessage) {\n    const errorElement = editProfileForm.querySelector(`.popup__input-error_type_${inputElement.name}`);\n    errorElement.textContent = errorMessage;\n    errorElement.classList.add('popup__input-error_active');\n}\n\n// Функция для скрытия ошибок\nfunction hideInputError(inputElement) {\n    const errorElement = editProfileForm.querySelector(`.popup__input-error_type_${inputElement.name}`);\n    errorElement.textContent = '';\n    errorElement.classList.remove('popup__input-error_active');\n}\n\n// Функция для проверки валидности поля\nfunction checkInputValidity(inputElement) {\n    if (inputElement.validity.valueMissing) {\n        showInputError(inputElement, 'Это поле обязательно для заполнения.');\n        return false;\n    }\n\n    if (inputElement.name === 'name') {\n        if (!nameRegex.test(inputElement.value)) {\n            showInputError(inputElement, nameErrorMessages.patternMismatch);\n            return false;\n        }\n\n        if (inputElement.value.length < 2) {\n            showInputError(inputElement, nameErrorMessages.tooShort);\n            return false;\n        }\n\n        if (inputElement.value.length > 40) {\n            showInputError(inputElement, nameErrorMessages.tooLong);\n            return false;\n        }\n    }\n\n    if (inputElement.name === 'description') {\n        if (!descriptionRegex.test(inputElement.value)) {\n            showInputError(inputElement, descriptionErrorMessages.patternMismatch);\n            return false;\n        }\n\n        if (inputElement.value.length < 2) {\n            showInputError(inputElement, descriptionErrorMessages.tooShort);\n            return false;\n        }\n\n        if (inputElement.value.length > 200) {\n            showInputError(inputElement, descriptionErrorMessages.tooLong);\n            return false;\n        }\n    }\n\n    hideInputError(inputElement);\n    return true;\n}\n\n// Обработчик изменения значений в полях ввода\nfunction handleInputChange(event) {\n    const inputElement = event.target;\n    checkInputValidity(inputElement);\n    toggleButtonState();\n}\n\n// Функция для управления состоянием кнопки\nfunction toggleButtonState() {\n    const isValidForm = editProfileForm.checkValidity();\n    submitButton.disabled = !isValidForm;\n}\n\n// Обработчик события submit для формы\nfunction handleEditProfileFormSubmit(evt) {\n    evt.preventDefault();\n\n    // Действия при успешной валидации (изменение данных профиля и т.д.)\n\n    closePopup(editProfilePopup);\n}\n\n// Очистка ошибок при открытии модального окна редактирования профиля\nfunction openEditProfilePopup() {\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n    hideInputError(nameInput);\n    hideInputError(jobInput);\n    toggleButtonState();\n    openPopup(editProfilePopup);\n}\n\n// Добавление слушателей событий\nnameInput.addEventListener('input', handleInputChange);\njobInput.addEventListener('input', handleInputChange);\neditProfileForm.addEventListener('submit', handleEditProfileFormSubmit);\neditProfileButton.addEventListener('click', openEditProfilePopup);\n\n// Обработчики закрытия попапов\ncloseButtons.forEach((button) => {\n    const popup = button.closest('.popup');\n    button.addEventListener('click', () => closePopup(popup));\n    addOverlayCloseHandler(popup);\n});\n"],"names":["__webpack_require__","name","link","deleteCard","event","target","closest","remove","likeCard","likeButton","classList","toggle","console","log","openPopup","popup","add","document","body","style","overflow","addEventListener","handleEscClose","closePopup","removeEventListener","key","openedPopup","querySelector","handleOverlayClick","contains","cardTemplate","content","cardList","editProfilePopup","imagePopup","imagePopupImage","imagePopupCaption","editProfileButton","closeButtons","querySelectorAll","profileTitle","profileDescription","openImagePopup","imageSrc","imageAlt","src","alt","textContent","backgroundImage","cards","forEach","cardData","cardElement","deleteCallback","likeCallback","openImageCallback","cloneNode","cardImage","createCard","append","showCards","editProfileForm","nameInput","jobInput","submitButton","nameRegex","descriptionRegex","nameErrorMessages","descriptionErrorMessages","showInputError","inputElement","errorMessage","errorElement","hideInputError","handleInputChange","validity","valueMissing","test","value","length","checkInputValidity","toggleButtonState","isValidForm","checkValidity","disabled","evt","preventDefault","button","addOverlayCloseHandler"],"sourceRoot":""}
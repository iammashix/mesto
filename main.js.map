{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/publicPath","webpack://mesto-project-ff/./src/cards.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.p = \"\";","import bebetka1 from './images/bebetka_1.jpeg';\nimport bebetka2 from './images/bebetka_2.jpeg';\nimport bebetka3 from './images/bebetka_3.jpeg';\nimport bebetka4 from './images/bebetka_4.jpeg';\nimport bebetka5 from './images/bebetka_5.jpeg';\nimport bebetka6 from './images/bebetka_6.jpeg';\n\nconst initialCards = [\n    {\n        name: 'Бебетка',\n        link: bebetka1\n    },\n    {\n        name: 'Бебестер',\n        link: bebetka4\n    },\n    {\n        name: 'Крейзи Беба',\n        link: bebetka2\n    },\n    {\n        name: 'Беба',\n        link: bebetka5\n    },\n    {\n        name: 'Сонный Бебстер',\n        link: bebetka3\n    },\n    {\n        name: 'Бусита',\n        link: bebetka6\n    }\n];\n\nexport default initialCards;","// создание карточки\nexport function createCard(cardTemplate, cardData, deleteCallback, likeCallback, openImageCallback) {\n    const cardElement = cardTemplate.cloneNode(true).querySelector('.card');\n    const cardImage = cardElement.querySelector('.card__image');\n    const likeButton = cardElement.querySelector('.card__like-button');\n\n    cardElement.querySelector('.card__title').textContent = cardData.name;\n    cardImage.src = cardData.link;\n    cardImage.alt = cardData.name;\n\n    cardImage.addEventListener('click', () => openImageCallback(cardData.link, cardData.name));\n    cardElement.querySelector('.card__delete-button').addEventListener('click', deleteCallback);\n    likeButton.addEventListener('click', likeCallback);\n\n    return cardElement;\n}\n\n// удаление карточки\nexport function deleteCard(event) {\n    const card = event.target.closest('.card');\n    card.remove();\n}\n\n// лайк карточки\nexport function likeCard(event) {\n    const likeButton = event.target;\n    likeButton.classList.toggle('card__like-button_is-active');\n    console.log(`Like button clicked: ${likeButton.classList}`);\n}\n","// открытие попапа\nexport function openPopup(popup) {\n    popup.classList.add('popup_is-opened');\n    document.body.style.overflow = 'hidden'; \n    document.addEventListener('keydown', handleEscClose); \n}\n\n// закрытие попапа\nexport function closePopup(popup) {\n    popup.classList.remove('popup_is-opened');\n    document.body.style.overflow = ''; \n    document.removeEventListener('keydown', handleEscClose); \n}\n\n// Esc\nfunction handleEscClose(event) {\n    if (event.key === 'Escape') {\n        const openedPopup = document.querySelector('.popup.popup_is-opened');\n        if (openedPopup) {\n            closePopup(openedPopup);\n        }\n    }\n}\n\n// Закрытие при клике на оверлей\nfunction handleOverlayClick(event) {\n    if (event.target.classList.contains('popup')) {\n        closePopup(event.target);\n    }\n}\n\nexport function addOverlayCloseHandler(popup) {\n    popup.addEventListener('click', handleOverlayClick);\n}\n","// Импорт стилей и данных\nimport './pages/index.css';\nimport initialCards from './cards.js';\nimport avatar from './images/avatar.jpeg';\nimport { createCard, deleteCard, likeCard } from './components/card.js';\nimport { openPopup, closePopup, addOverlayCloseHandler } from './components/modal.js';\n\n// Получение шаблона карточки и списка для карточек\nconst cardTemplate = document.querySelector('#card-template').content;\nconst cardList = document.querySelector('.places__list');\n\n// Константы DOM\nconst editProfilePopup = document.querySelector('.popup_type_edit');\nconst newCardPopup = document.querySelector('.popup_type_new-card');\nconst imagePopup = document.querySelector('.popup_type_image');\nconst imagePopupImage = imagePopup.querySelector('.popup__image');\nconst imagePopupCaption = imagePopup.querySelector('.popup__caption');\nconst editProfileButton = document.querySelector('.profile__edit-button');\nconst addCardButton = document.querySelector('.profile__add-button');\nconst closeButtons = document.querySelectorAll('.popup__close');\nconst profileTitle = document.querySelector('.profile__title');\nconst profileDescription = document.querySelector('.profile__description');\n\n// Установка фото профиля\ndocument.querySelector('.profile__image').style.backgroundImage = `url(${avatar})`;\n\n// Функция открытия попапа с изображением\nexport function openImagePopup(imageSrc, imageAlt) {\n    imagePopupImage.src = imageSrc;\n    imagePopupImage.alt = imageAlt;\n    imagePopupCaption.textContent = imageAlt;\n    openPopup(imagePopup);\n}\n\n// Функция вывода карточек\nfunction showCards(cards) {\n    cards.forEach((cardData) => {\n        const cardElement = createCard(cardTemplate, cardData, deleteCard, likeCard, openImagePopup);\n        cardList.append(cardElement);\n    });\n}\n\n// Инициализация карточек при загрузке страницы\nshowCards(initialCards);\n\n// Получение элементов формы редактирования профиля\nconst editProfileForm = document.querySelector('.popup__form[name=\"edit-profile\"]');\nconst nameInput = editProfileForm.querySelector('.popup__input_type_name');\nconst jobInput = editProfileForm.querySelector('.popup__input_type_description');\n\n// Регулярные выражения для валидации данных\nconst nameRegex = /^[а-яА-Яa-zA-Z\\- ]+$/;\nconst jobRegex = /^[а-яА-Яa-zA-Z\\- ]+$/;\n\n// Функция проверки валидности данных\nfunction isValidInput(inputValue, minLength, maxLength, pattern) {\n    return pattern.test(inputValue) && inputValue.length >= minLength && inputValue.length <= maxLength;\n}\n\n// Функция очистки ошибок валидации\nfunction clearValidationErrors() {\n    const errorElements = document.querySelectorAll('.popup__input-error');\n    errorElements.forEach(error => error.textContent = '');\n}\n\n// Функция обновления состояния кнопки \"Сохранить\"\nfunction toggleSaveButtonState(isValid) {\n    const saveButton = editProfileForm.querySelector('.button.popup__button');\n    if (isValid) {\n        saveButton.removeAttribute('disabled');\n        saveButton.classList.remove('popup__button_disabled');\n    } else {\n        saveButton.setAttribute('disabled', true);\n        saveButton.classList.add('popup__button_disabled');\n    }\n}\n\n// Обработчик события submit для формы редактирования профиля\nfunction handleEditProfileFormSubmit(evt) {\n    evt.preventDefault();\n\n    const newName = nameInput.value.trim();\n    const newJob = jobInput.value.trim();\n\n    if (!isValidInput(newName, 2, 40, nameRegex)) {\n        const nameError = editProfileForm.querySelector('.popup__input-error_type_name');\n        nameError.textContent = 'Введите от 2 до 40 символов, используя только буквы, дефисы и пробелы';\n    }\n\n    if (!isValidInput(newJob, 2, 200, jobRegex)) {\n        const jobError = editProfileForm.querySelector('.popup__input-error_type_description');\n        jobError.textContent = 'Введите от 2 до 200 символов, используя только буквы, дефисы и пробелы';\n    }\n\n    if (isValidInput(newName, 2, 40, nameRegex) && isValidInput(newJob, 2, 200, jobRegex)) {\n        profileTitle.textContent = newName;\n        profileDescription.textContent = newJob;\n        closePopup(editProfilePopup);\n    }\n\n    toggleSaveButtonState(isValidInput(newName, 2, 40, nameRegex) && isValidInput(newJob, 2, 200, jobRegex));\n}\n\nnameInput.addEventListener('input', () => {\n    clearValidationErrors();\n    toggleSaveButtonState(isValidInput(nameInput.value.trim(), 2, 40, nameRegex) && isValidInput(jobInput.value.trim(), 2, 200, jobRegex));\n});\n\njobInput.addEventListener('input', () => {\n    clearValidationErrors();\n    toggleSaveButtonState(isValidInput(nameInput.value.trim(), 2, 40, nameRegex) && isValidInput(jobInput.value.trim(), 2, 200, jobRegex));\n});\n\n// Слушатель события submit для формы редактирования профиля\neditProfileForm.addEventListener('submit', handleEditProfileFormSubmit);\n\n// Очистка ошибок при открытии формы редактирования профиля\neditProfileButton.addEventListener('click', () => {\n    openPopup(editProfilePopup);\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n    clearValidationErrors();\n    toggleSaveButtonState(true); // По умолчанию кнопка активна\n});\n\n// Получение элементов формы для новой карточки\nconst newCardForm = document.querySelector('.popup__form[name=\"new-place\"]');\nconst cardNameInput = newCardForm.querySelector('.popup__input_type_card-name');\nconst cardLinkInput = newCardForm.querySelector('.popup__input_type_url');\n\n// Обработчик события submit для формы новой карточки\nfunction handleNewCardFormSubmit(evt) {\n    evt.preventDefault();\n    const cardName = cardNameInput.value;\n    const cardLink = cardLinkInput.value;\n\n    const newCard = createCard(cardTemplate, { name: cardName, link: cardLink }, deleteCard, likeCard, openImagePopup);\n    cardList.prepend(newCard);\n\n    newCardForm.reset();\n    closePopup(newCardPopup);\n}\n\nnewCardForm.addEventListener('submit', handleNewCardFormSubmit);\n\n// Обработчики событий для открытия попапов\naddCardButton.addEventListener('click', () => openPopup(newCardPopup));\n\ncloseButtons.forEach((button) => {\n    const popup = button.closest('.popup');\n    button.addEventListener('click', () => closePopup(popup));\n    addOverlayCloseHandler(popup); // Добавляем обработчик клика на оверлей для каждого попапа\n});\n"],"names":["__webpack_require__","name","link","createCard","cardTemplate","cardData","deleteCallback","likeCallback","openImageCallback","cardElement","cloneNode","querySelector","cardImage","likeButton","textContent","src","alt","addEventListener","deleteCard","event","target","closest","remove","likeCard","classList","toggle","console","log","openPopup","popup","add","document","body","style","overflow","handleEscClose","closePopup","removeEventListener","key","openedPopup","handleOverlayClick","contains","content","cardList","editProfilePopup","newCardPopup","imagePopup","imagePopupImage","imagePopupCaption","editProfileButton","addCardButton","closeButtons","querySelectorAll","profileTitle","profileDescription","openImagePopup","imageSrc","imageAlt","backgroundImage","cards","forEach","append","showCards","editProfileForm","nameInput","jobInput","nameRegex","jobRegex","isValidInput","inputValue","minLength","maxLength","pattern","test","length","clearValidationErrors","error","toggleSaveButtonState","isValid","saveButton","removeAttribute","setAttribute","value","trim","evt","preventDefault","newName","newJob","newCardForm","cardNameInput","cardLinkInput","cardName","cardLink","newCard","prepend","reset","button","addOverlayCloseHandler"],"sourceRoot":""}